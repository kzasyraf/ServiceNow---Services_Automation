<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_alias_templates">
    <sys_alias_templates action="INSERT_OR_UPDATE">
        <default_data_template>{&#13;
	"credential": {&#13;
		"oauth_entity": {&#13;
			"oauth_entity_profile": [&#13;
				{&#13;
					"grant_type": "client_credentials",&#13;
					"name": "Sharepoint Online Profile",&#13;
					"default": true,&#13;
					"oauth_entity_profile_scope": [&#13;
						"00000003-0000-0ff1-ce00-000000000000"&#13;
					]&#13;
				}&#13;
			],&#13;
			"code_challenge_method": "S256",&#13;
			"type": "consumer",&#13;
			"oauth_entity_scope": [&#13;
				{&#13;
					"oauth_entity_scope": "00000003-0000-0ff1-ce00-000000000000",&#13;
					"name": "resource"&#13;
				}&#13;
			],&#13;
			"client_id": "",&#13;
			"use_mutual_auth": false,&#13;
			"revoke_token_url": "https://&lt;Domain Name&gt;.sharepoint.com/_layouts/15/appredirect.aspx",&#13;
			"default_grant_type": "client_credentials",&#13;
			"public_client": false,&#13;
			"oauth_api_script": "",&#13;
			"name": "Sharepoint Online",&#13;
			"client_secret": "",&#13;
			"auth_url": "",&#13;
			"token_url": "https://accounts.accesscontrol.windows.net/&lt;Tennant ID&gt;/tokens/OAuth/2",&#13;
			"redirect_url": ""&#13;
		},&#13;
		"name": "Sharepoint Online Credential",&#13;
		"table": "oauth_2_0_credentials"&#13;
	},&#13;
	"connection": {&#13;
		"use_mid": false,&#13;
		"connection_url": "",&#13;
		"name": "",&#13;
		"table": "http_connection"&#13;
	}&#13;
}</default_data_template>
        <dynamic_data_schema>{&#13;
  "connection_fields": [{&#13;
	"name": "connection.name",&#13;
	"label": "Connection Name",&#13;
	"type": "text",&#13;
	"defaultValue": "Sharepoint Online",&#13;
	"hint": "Display name for the Connection",&#13;
        "mandatory":true&#13;
    },&#13;
    {&#13;
      "name": "connection.connection_url",&#13;
      "label": "Connection URL",&#13;
      "type": "text",&#13;
      "defaultValue": "https://&lt;domain name&gt;.sharepoint.com",&#13;
      "hint": "Connection URL for sharepoint connection",&#13;
        "mandatory":true&#13;
    }&#13;
  ],&#13;
  "credential_fields": [&#13;
     {&#13;
      "name": "credential.tenant_id",&#13;
      "label": "Tenant ID",&#13;
      "type": "text",&#13;
      "hint": "Application Tenant ID",&#13;
      "mandatory":true&#13;
    },&#13;
    {&#13;
      "name": "credential.oauth_entity.client_id",&#13;
      "label": "OAuth Client ID",&#13;
      "type": "text",&#13;
      "hint": "Client ID for provider",&#13;
        "mandatory":true&#13;
    },&#13;
    {&#13;
      "name": "credential.oauth_entity.client_secret",&#13;
      "label": "OAuth Client Secret",&#13;
      "type": "password",&#13;
      "hint": "Client Secret for provider",&#13;
        "mandatory":true&#13;
    },&#13;
    {&#13;
      "name": "credential.oauth_entity.redirect_url",&#13;
      "label": "OAuth Redirect URL",&#13;
      "type": "text",&#13;
      "defaultValue": "https://&lt;instance-name&gt;.service-now.com/oauth_redirect.do",&#13;
      "hint": "Callback URL for provider",&#13;
        "mandatory":true&#13;
    }&#13;
  ]&#13;
}</dynamic_data_schema>
        <name>Sharepoint Online</name>
        <on_edit_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
	let jsonDynamicParsed = JSON.parse(jsonDynamicData);
	let tenantId = jsonDynamicParsed["credential.tenant_id"];
	let connectionUrl = jsonDynamicParsed["connection.connection_url"];
	let clientID = jsonDynamicParsed["credential.oauth_entity.client_id"];

	let httpConnectionGr = new GlideRecord('http_connection');
	httpConnectionGr.get(connectionSysId);

	let credentialGr = new GlideRecord('oauth_2_0_credentials');
	credentialGr.get(httpConnectionGr.getValue('credential'));

	let entityProfileGr = new GlideRecord('oauth_entity_profile');
	entityProfileGr.get(credentialGr.getValue('oauth_entity_profile'));

	let oauthScriptGr = new GlideRecord('sys_script_include');
	oauthScriptGr.get('name', 'SharepointOnlineOAuthToken');

	new global.GlideQuery('oauth_entity')
		.where('sys_id', entityProfileGr.getValue('oauth_entity'))
		.update(
			{
				'oauth_api_script': oauthScriptGr.getValue('sys_id'),
				'client_id': clientID + '@' + tenantId,
				'token_url': 'https://accounts.accesscontrol.windows.net/' + tenantId + '/tokens/OAuth/2',
				'revoke_token_url': connectionUrl + '/_layouts/15/appredirect.aspx'	
			}
		);
	
	let entityScopesGr = new GlideRecord('oauth_entity_scope');
	entityScopesGr.addQuery('name', 'resource');
	entityScopesGr.addQuery('oauth_entity', entityProfileGr.getValue('oauth_entity'));
	entityScopesGr.query();
	while(entityScopesGr.next()){
			entityScopesGr.setValue(
				'oauth_entity_scope',
				'00000003-0000-0ff1-ce00-000000000000/'  + httpConnectionGr.getValue('host') + '@' + tenantId
			);
			entityScopesGr.update();
	}

})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);]]></on_edit_script>
        <post_process_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
	let jsonDynamicParsed = JSON.parse(jsonDynamicData);
	let tenantId = jsonDynamicParsed["credential.tenant_id"];
	let connectionUrl = jsonDynamicParsed["connection.connection_url"];
	let clientID = jsonDynamicParsed["credential.oauth_entity.client_id"];

	let httpConnectionGr = new GlideRecord('http_connection');
	httpConnectionGr.get(connectionSysId);

	let credentialGr = new GlideRecord('oauth_2_0_credentials');
	credentialGr.get(httpConnectionGr.getValue('credential'));

	let entityProfileGr = new GlideRecord('oauth_entity_profile');
	entityProfileGr.get(credentialGr.getValue('oauth_entity_profile'));

	let oauthScriptGr = new GlideRecord('sys_script_include');
	oauthScriptGr.get('name', 'SharepointOnlineOAuthToken');

	new global.GlideQuery('oauth_entity')
		.where('sys_id', entityProfileGr.getValue('oauth_entity'))
		.update(
			{
				'oauth_api_script': oauthScriptGr.getValue('sys_id'),
				'client_id': clientID + '@' + tenantId,
				'token_url': 'https://accounts.accesscontrol.windows.net/' + tenantId + '/tokens/OAuth/2',
				'revoke_token_url': connectionUrl + '/_layouts/15/appredirect.aspx'	
			}
		);
	
	let entityScopesGr = new GlideRecord('oauth_entity_scope');
	entityScopesGr.addQuery('name', 'resource');
	entityScopesGr.addQuery('oauth_entity', entityProfileGr.getValue('oauth_entity'));
	entityScopesGr.query();
	while(entityScopesGr.next()){
			entityScopesGr.setValue(
				'oauth_entity_scope',
				'00000003-0000-0ff1-ce00-000000000000/'  + httpConnectionGr.getValue('host') + '@' + tenantId
			);
			entityScopesGr.update();
	}

})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);]]></post_process_script>
        <pre_edit_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
   // aliasId: sys_id of the alias record.
   // connectionSysId: sys_id of the connection record created by using the default and dynamic data.
   // jsonDefaultData (String): The default JSON template data from template table.
   // e.g. var jsonDefaultParsed = JSON.parse(jsonDefaultData);
   //      gs.info("default connection url = " + jsonDefaultParsed["connection"]["connection_url"]);
   // jsonDynamicData (String): Current values of Connection and Credential fields (except Password fields) based on the key-value pairs defined in "Dynamic Data".
   // e.g. var jsonDynamicParsed = JSON.parse(jsonDynamicData);
   //      gs.info("dynamic connection url = " + jsonDynamicParsed["connection.connection_url"]);

   //returns array of objects. Each object has name-value pairs for populating additional fields values in connections dashboard in the edit view.
   //In this example script, additionalField1, additionalField2 are additional fields.
   //Here we define calcAdditionalField1(), calcAdditionalField2() functions in the script
   //to calculate current values for additionalField1, additionalField2.

   //return [{
   //         name: "additionalField1"
   //         value: calcAdditionalField1(),
   //    },
   //    {
   //         name: "additionalField2"
   //         value: calcAdditionalField2(),
   //    }
   //];

   return [];
})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);
]]></pre_edit_script>
        <sys_class_name>sys_alias_templates</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-03 02:10:24</sys_created_on>
        <sys_id>b8ecc38447f04210184a1af2e16d43c4</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Sharepoint Online</sys_name>
        <sys_package display_value="Services Automation" source="x_1320670_servic_0">a3fb3d02472c4210184a1af2e16d43db</sys_package>
        <sys_policy/>
        <sys_scope display_value="Services Automation">a3fb3d02472c4210184a1af2e16d43db</sys_scope>
        <sys_update_name>sys_alias_templates_b8ecc38447f04210184a1af2e16d43c4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-03 17:28:17</sys_updated_on>
    </sys_alias_templates>
</record_update>
